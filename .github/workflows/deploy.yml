name: Deploying LaunchPad Client and Server

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setting up Node.js environment
        uses: ./.github/workflows/shared

      - name: Build the application
        run: npm run build

      # Run Semantic Release to calculate version
      - name: Semantic Release
        id: semantic
        run: npx semantic-release
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}

      # Only proceed if a release was created
      - name: Extract new version
        if: steps.semantic.outputs.new-release-published == 'true'
        run: echo "RELEASE_VERSION=${{ steps.semantic.outputs.release-version }}" >> $GITHUB_ENV

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }} # Use the GitHub actor (the user triggering the action)
          password: ${{ secrets.GH_TOKEN }} # Use the provided GitHub token

      - name: Build & push client image (once, multiple tags)
        run: |
          IMAGE_BASE="ghcr.io/${{ github.repository_owner }}/${{ github.repository }}-client"
          docker build -t $IMAGE_BASE:${{ github.sha }} ./client
          docker tag $IMAGE_BASE:${{ github.sha }} $IMAGE_BASE:${{ env.RELEASE_VERSION }}
          docker tag $IMAGE_BASE:${{ github.sha }} $IMAGE_BASE:latest
          docker push $IMAGE_BASE:${{ github.sha }}
          docker push $IMAGE_BASE:${{ env.RELEASE_VERSION }}
          docker push $IMAGE_BASE:latest

      - name: Build & push server image (once, multiple tags)
        run: |
          IMAGE_BASE="ghcr.io/${{ github.repository_owner }}/${{ github.repository }}-server"
          docker build -t $IMAGE_BASE:${{ github.sha }} ./server
          docker tag $IMAGE_BASE:${{ github.sha }} $IMAGE_BASE:${{ env.RELEASE_VERSION }}
          docker tag $IMAGE_BASE:${{ github.sha }} $IMAGE_BASE:latest
          docker push $IMAGE_BASE:${{ github.sha }}
          docker push $IMAGE_BASE:${{ env.RELEASE_VERSION }}
          docker push $IMAGE_BASE:latest
