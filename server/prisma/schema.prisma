// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String       @id @default(cuid())
  clerkId       String?      @unique
  imageUrl      String?
  firstName     String
  lastName      String
  email         String       @unique
  emailVerified Boolean?     @default(false)
  onboarding    Boolean?     @default(false)
  Membership    Membership[]

  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @updatedAt
  Organization Organization[]
}

model Organization {
  id          String  @id @default(cuid())
  name        String
  description String?
  logo        String?
  slug        String  @unique
  website     String?
  location    String?
  ownerId     String
  owner       User    @relation(fields: [ownerId], references: [id])

  Invitation Invitation[]
  Membership Membership[]
  Project    Project[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

// Membership (pivot table)
model Membership {
  id             String   @id @default(cuid())
  userId         String
  organizationId String
  role           Role
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt

  user         User         @relation(fields: [userId], references: [id])
  organization Organization @relation(fields: [organizationId], references: [id])

  @@unique([userId, organizationId]) // Ensures a user can only be a member of an organization once
  @@index([userId]) // Index for faster lookups
  @@index([organizationId]) // Index for faster lookups
}

model Project {
  id             String       @id @default(cuid())
  name           String
  description    String?
  slug           String       @unique
  organizationId String
  organization   Organization @relation(fields: [organizationId], references: [id])
  createdAt      DateTime     @default(now())
  updatedAt      DateTime     @updatedAt
}

model Invitation {
  id             String           @id @default(cuid())
  email          String
  token          String           @unique
  createdAt      DateTime         @default(now())
  updatedAt      DateTime         @updatedAt
  expiresAt      DateTime
  status         InvitationStatus @default(PENDING)
  organizationId String
  organization   Organization     @relation(fields: [organizationId], references: [id])
}

enum Role {
  ADMIN
  USER
}

enum InvitationStatus {
  PENDING
  ACCEPTED
  REJECTED
  EXPIRED
}
