services:
  postgres:
    image: postgres:17.4-alpine3.21
    restart: always
    environment:
      POSTGRES_DB: launchpad
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - ./docker-data/postgres:/var/lib/postgresql/data
    networks:
      - launchpad

  redis:
    container_name: redis
    image: redis:latest
    restart: always
    command: redis-server --requirepass ${REDIS_PASSWORD}
    ports:
      - "6379:6379"
    volumes:
      - ./docker-data/redis:/data
    networks:
      - launchpad

  server:
    container_name: server
    image: ghcr.io/owaisad/launchpad/server:latest
    restart: always
    ports:
      - "8080:8080"
    depends_on:
      - postgres
      - redis
    environment:
      DATABASE_URL: postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/launchpad
      REDIS_URL: redis://default:${REDIS_PASSWORD}@redis:6379
      NODE_ENV: production
    volumes:
      - ./docker-data/server:/usr/src/app
    networks:
      - launchpad

  client:
    container_name: client
    image: ghcr.io/owaisad/launchpad/client:latest
    restart: always
    ports:
      - "3000:3000"
    depends_on:
      - server
    volumes:
      - ./docker-data/client:/usr/src/app
    networks:
      - launchpad

  nginx:
    container_name: nginx
    image: fholzer/nginx-brotli:latest
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
      - ./nginx/certs:/etc/nginx/certs:ro
    depends_on:
      - client
      - server
    networks:
      - launchpad

  watchtower:
    container_name: watchtower
    image: containrrr/watchtower:latest
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    command: --interval 30
    restart: always
    networks:
      - launchpad

volumes:
  docker-data:

networks:
  launchpad:
    driver: bridge
